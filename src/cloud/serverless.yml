service: timeout-api

plugins:
  - serverless-sqs-alarms-plugin

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221

  stage: dev
  region: eu-west-1

  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource: arn:aws:dynamodb:*:*:table/${self:custom.latencyTable}
  - Effect: Allow
    Action:
      - s3:GetItem
      - s3:PutItem
    Resource: arn:aws:s3:::${self:custom.latencyBucket}
  - Effect: Allow
    Action:
      - lambda:InvokeFunction
    Resource: arn:aws:lambda:*:*:function:*
  - Effect: Allow
    Action:
      - sqs:DeleteMessage
      - sqs:ReceiveMessage
    Resource: arn:aws:sqs:*:*:${self:custom.timeoutTransactions}

custom:
  region: ${self:provider.region}
  prefix: ${self:provider.stage}-${self:service}
  timeoutTransactions: ${self:custom.prefix}-timeout-transactions
  latencyBucket: ${self:custom.prefix}-transaction-latencies
  latencyTable: ${self:custom.prefix}-transaction-latencies-table

functions:
  getVerifications:
    handler: ./cloud/hello.main
    events:
      - httpApi:
          path: /verify
          method: get
    environment:
      latencyTable: ${self:custom.latencyTable}
      latencyBucket: ${self:custom.latencyBucket}

  createLatencyTableObjects:
    handler: ./cloud/world.main
    description: Fill DynamoDb latencies table with latency country API latency data objcets.
    events:
      - s3: ${self:custom.latencyBucket}
    environment:
      latencyTable: ${self:custom.latencyTable}
      latencyBucket: ${self:custom.latencyBucket}

resources:
  Resources:
    Transactions:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.timeoutTransactions}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - MessagesDeadLetterQueue
            - Arn
          maxReceiveCount: 10

    MessagesDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.timeoutTransactions}-dead-letter-queue
        MessageRetentionPeriod: 1209600

    Verification:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.latencyTable}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    # LatencyBucket:
    #   Type: AWS::S3::Bucket
    #   Properties:
    #     BucketName: ${self:custom.latencyBucket}
